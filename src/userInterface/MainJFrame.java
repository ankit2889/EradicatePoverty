/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface;

import Business.Business;
import Business.DB4OUtil.DB4OUtil;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Utility.Validation;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import userInterface.Donor.DonateMoneyJPanel;
import userInterface.LocalAgent.LocalAgentRegistrationJPanel;

/**
 *
 * @author JJPL
 */
public class MainJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainJFrame
     */
    
    private Business business;

    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public MainJFrame() {
        
        initComponents();
        
        business = dB4OUtil.retrieveSystem();
        populateOrgComboBox();
    }

    
    public void populateOrgComboBox()
    {
        roleSelector_JComboBox.removeAllItems();
        roleSelector_JComboBox.addItem("System Admin");
     
        roleSelector_JComboBox.addItem("Enterprise Admin");
        roleSelector_JComboBox.addItem("Organization Admin");
        roleSelector_JComboBox.addItem("Donor");
        roleSelector_JComboBox.addItem("Field Staff");
        roleSelector_JComboBox.addItem("Senior Staff");
        
        roleSelector_JComboBox.addItem("Local Agent");
        roleSelector_JComboBox.addItem("Recipient");
      
        roleSelector_JComboBox.addItem("Accounts Manager");
              
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        login_Jbutton = new javax.swing.JButton();
        userName_Jtext = new javax.swing.JTextField();
        password_Jtext = new javax.swing.JPasswordField();
        logout_JButton1 = new javax.swing.JButton();
        roleSelector_JComboBox = new javax.swing.JComboBox();
        agentRegisterJbutton = new javax.swing.JButton();
        donateMoneyJbutton = new javax.swing.JButton();
        registerRecipientJbutton1 = new javax.swing.JButton();
        userProcessContainer = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(250);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        login_Jbutton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        login_Jbutton.setText("Login");
        login_Jbutton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        login_Jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_JbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(login_Jbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 160, 30));

        userName_Jtext.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        userName_Jtext.setForeground(new java.awt.Color(204, 204, 204));
        userName_Jtext.setText("Username:");
        userName_Jtext.setToolTipText("Please enter username:");
        userName_Jtext.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        userName_Jtext.setSelectionColor(new java.awt.Color(51, 102, 255));
        userName_Jtext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userName_JtextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userName_JtextFocusLost(evt);
            }
        });
        userName_Jtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userName_JtextActionPerformed(evt);
            }
        });
        jPanel1.add(userName_Jtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 170, 30));

        password_Jtext.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        password_Jtext.setToolTipText("Please enter password:");
        password_Jtext.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                password_JtextFocusGained(evt);
            }
        });
        password_Jtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                password_JtextActionPerformed(evt);
            }
        });
        jPanel1.add(password_Jtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 170, 30));

        logout_JButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        logout_JButton1.setText("Logout");
        logout_JButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        logout_JButton1.setEnabled(false);
        logout_JButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_JButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(logout_JButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 70, 30));

        roleSelector_JComboBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        roleSelector_JComboBox.setToolTipText("Please select role which you want to login");
        jPanel1.add(roleSelector_JComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 170, 30));

        agentRegisterJbutton.setText("Register as M-PESA Agent");
        agentRegisterJbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agentRegisterJbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(agentRegisterJbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 180, 30));

        donateMoneyJbutton.setText("Donate Money");
        donateMoneyJbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donateMoneyJbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(donateMoneyJbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 180, 30));

        registerRecipientJbutton1.setText("Register as Recipient");
        registerRecipientJbutton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerRecipientJbutton1ActionPerformed(evt);
            }
        });
        jPanel1.add(registerRecipientJbutton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 180, 30));

        jSplitPane1.setLeftComponent(jPanel1);

        userProcessContainer.setBackground(new java.awt.Color(255, 255, 255));
        userProcessContainer.setLayout(new java.awt.CardLayout());
        jSplitPane1.setRightComponent(userProcessContainer);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userName_JtextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userName_JtextFocusGained
        // TODO add your handling code here:
        
        if(userName_Jtext.getText().equalsIgnoreCase("Username:"))
        {
            userName_Jtext.setText("");
            userName_Jtext.setForeground(Color.BLACK);
        }
        
    }//GEN-LAST:event_userName_JtextFocusGained

    private void userName_JtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userName_JtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userName_JtextActionPerformed

    private void password_JtextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_password_JtextFocusGained
        // TODO add your handling code here:
        
        if(String.valueOf(password_Jtext.getPassword()).trim().equalsIgnoreCase("Password:"))
        {
            password_Jtext.setText("");
        }
    }//GEN-LAST:event_password_JtextFocusGained

    private void userName_JtextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userName_JtextFocusLost
        // TODO add your handling code here:
       if(userName_Jtext.getText().trim().equalsIgnoreCase(""))
        {
            userName_Jtext.setText("Username:");
            userName_Jtext.setForeground(Color.GRAY);
        } 
       
    }//GEN-LAST:event_userName_JtextFocusLost

    private void logout_JButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_JButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.removeAll();
        userName_Jtext.setText(null);
        password_Jtext.setText(null);
        dB4OUtil.storeSystem(business);
    }//GEN-LAST:event_logout_JButton1ActionPerformed

    private void login_JbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_JbuttonActionPerformed
        // TODO add your handling code here:
        login_Jbutton.setEnabled(true);
        String userName = userName_Jtext.getText();
        
        String password = String.valueOf(password_Jtext.getPassword());
        String roleSelected = roleSelector_JComboBox.getSelectedItem().toString();
        boolean loginErrorFlag=false;
        String loginErrorMsg="";
        if (Validation.validateTextFieldsForNonEmpty(userName_Jtext)==false||userName.equalsIgnoreCase("Username:"))
        {
            loginErrorFlag = true;
            loginErrorMsg = "Username cannot be blank";
        }
        
        if (!Validation.validateTextFieldsForNonEmpty(password_Jtext))
        {
            loginErrorFlag = true;
            loginErrorMsg+= "\n Password cannot be blank";
        }
        
        
        
        if (loginErrorFlag == true)
        {
            JOptionPane.showMessageDialog(null,loginErrorMsg,"Login Error Message",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        else {
            
            logout_JButton1.setEnabled(true);
        
            if (roleSelected.equalsIgnoreCase("System Admin"))
            {
                authenticateSystemAdmin(userName,password);
            }
            
//            else if (roleSelected.equalsIgnoreCase("Network Admin"))
//            {
//                authenticateNetworkAdmin(userName,password);
//            }
            
            else if (roleSelected.equalsIgnoreCase("Enterprise Admin"))
            {
                authenticateEnterpriseAdmin(userName,password);
            }
            
            else if (roleSelected.equalsIgnoreCase("Organization Admin"))
            {
                authenticateOrganizationAdmin(userName,password);
            }
            
            else if (roleSelected.equalsIgnoreCase("Government Admin"))
            {
                authenticateEnterpriseAdmin(userName,password);
            }
            
            else if (roleSelected.equalsIgnoreCase("Field Staff"))
            {
                authenticateFieldStaff(userName,password);
            }
            
             else if (roleSelected.equalsIgnoreCase("enior Staff"))
            {
                authenticateSeniorStaff(userName,password);
            }
            
            else if (roleSelected.equalsIgnoreCase("Donor"))
            {
                authenticateDonor(userName,password);
            }
            
            else if (roleSelected.equalsIgnoreCase("Accounts Manager"))
            {
                authenticateAccountsManager(userName,password);
            }
            
            else if (roleSelected.equalsIgnoreCase("Local Agent"))
            {
                authenticateLocalAgent(userName,password);
            }
            
            else if (roleSelected.equalsIgnoreCase("Recipient"))
            {
                authenticateRecipient(userName,password);
            }
            
            
            
            
        }
        
        
    }//GEN-LAST:event_login_JbuttonActionPerformed

    private void password_JtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_password_JtextActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_password_JtextActionPerformed

    private void agentRegisterJbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agentRegisterJbuttonActionPerformed
        // TODO add your handling code here:
        LocalAgentRegistrationJPanel lrjp = new LocalAgentRegistrationJPanel(userProcessContainer,business.getSystemOrg());
        userProcessContainer.add("lrjp",lrjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
        
    }//GEN-LAST:event_agentRegisterJbuttonActionPerformed

    private void donateMoneyJbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donateMoneyJbuttonActionPerformed
        // TODO add your handling code here:
        
       DonateMoneyJPanel donateMoneyJPanel = new DonateMoneyJPanel(userProcessContainer,business.getSystemOrg());
      userProcessContainer.add("donateMoneyJPanel",donateMoneyJPanel);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_donateMoneyJbuttonActionPerformed

    private void registerRecipientJbutton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerRecipientJbutton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerRecipientJbutton1ActionPerformed

    
    public void authenticateSystemAdmin (String userName,String password)
    {
        
        UserAccount ua = business.getSystemOrg().getUserAccountDirectory().authenticateUser(userName, password);
        
        if (ua ==null)
        {
            JOptionPane.showMessageDialog(null,"Incorrect credentials for system administrator","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
       else if(!ua.isIsActive())
        {
            
            JOptionPane.showMessageDialog(null,"Sorry,it seems your account is disabled.","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
            
        }
        
        else 
        {
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                userProcessContainer.add("workArea",ua.getRole().createWorkArea(userProcessContainer,ua,null,null, business.getSystemOrg()));
                layout.next(userProcessContainer);
        }
    }
    
    
//    public void authenticateNetworkAdmin (String userName,String password)
//    {
//        UserAccount ua = null;
//        
//        for (Network network:business.getNetworkList())
//        {
//            ua = network.getUserAccountDirectory().authenticateUser(userName, password);
//            
//        }
//        
//        if (ua ==null)
//        {
//           JOptionPane.showMessageDialog(null,"Incorrect credentials for network administrator","Login Denied",JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//        
//        else 
//        {
//           JOptionPane.showMessageDialog(null,"Login successful for network admin");   
//        }         
//    }
//    
    
    
    
    public void authenticateEnterpriseAdmin (String userName,String password)
    {
        UserAccount ua = null;
        Enterprise inEnterprise=null;
        
        
        Network rootNetwork=business.getSystemOrg().getRootNetwork();
        
        for(Enterprise enterprise:rootNetwork.getEnterpriseDirectory().getEnterpriseList())
        {
            ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
             if(ua!=null)
                {
                    inEnterprise = enterprise;
                    break;
                }
        }
        
        if(ua==null)
        {
            for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
            {
                for(Enterprise enterprise:countryNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                
                ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    if(ua!=null)
                        {
                            inEnterprise = enterprise;
                            break;
                        }
               
                
                }
            
        
            }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList()) 
                        {
                            for(Enterprise enterprise:stateNetwork.getEnterpriseDirectory().getEnterpriseList())
                                {
                
                                    ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                                        if(ua!=null)
                                            {
                                                inEnterprise = enterprise;
                                                break;
                                            }
               
                
                                }
                        }
        
                }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList())
                    {
                        
                    for(Network cityNetwork:stateNetwork.getSubNetworkDirectory().getNetworkList()){
                for(Enterprise enterprise:cityNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                
                ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                if(ua!=null)
                {
                    inEnterprise = enterprise;
                    break;
                }
               
                
                }
                    }
                    }
        
            }
        }
        
        
        if (ua ==null)
        {
           JOptionPane.showMessageDialog(null,"Incorrect credentials for enterprise administrator","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        else 
        {
           
            
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
               
                userProcessContainer.add("workArea",ua.getRole().createWorkArea(userProcessContainer,ua,null,inEnterprise, business.getSystemOrg()));
                layout.next(userProcessContainer);
                
        }         
    }
    
    
       
    public void authenticateOrganizationAdmin (String userName,String password)
    {
        UserAccount ua = null;
        Organization inOrganization=null;
        
        Network rootNetwork=business.getSystemOrg().getRootNetwork();
        
        for(Enterprise enterprise:rootNetwork.getEnterpriseDirectory().getEnterpriseList())
        {
            for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
            {
            ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
             if(ua!=null)
                {
                    inOrganization = organization;
                    break;
                }
             
            }
        }
        
        if(ua==null)
        {
            for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
            {
                for(Enterprise enterprise:countryNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                    
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                        {
                
                        ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                        if(ua!=null)
                        {
                            inOrganization = organization;
                            break;
                        }
               
                
                        }
                    
                }
            
        
            }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList()) 
                        {
                            for(Enterprise enterprise:stateNetwork.getEnterpriseDirectory().getEnterpriseList())
                                {
                                    
                                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                                    {
                
                                    ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                        if(ua!=null)
                                            {
                                                inOrganization = organization;
                                                break;
                                            }
                                    }        
                
                                }
                        }
        
                }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList())
                    {
                        
                    for(Network cityNetwork:stateNetwork.getSubNetworkDirectory().getNetworkList()){
                for(Enterprise enterprise:cityNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                    
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                        {
                
                         ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                         if(ua!=null)
                            {
                             inOrganization = organization;
                              break;
                            }
                        }          
                
                }
                    }
                    }
        
            }
        }
        
        
        
        if (ua ==null)
        {
           JOptionPane.showMessageDialog(null,"Incorrect credentials for organization administrator","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        else 
        {
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                
                userProcessContainer.add("workArea",ua.getRole().createWorkArea(userProcessContainer,ua,inOrganization,null, business.getSystemOrg()));
                layout.next(userProcessContainer);
                
        }         
    }
    
    
    
    public void authenticateFieldStaff (String userName,String password)
    {
        UserAccount ua = null;
        Organization inOrganization=null;
        
        Network rootNetwork=business.getSystemOrg().getRootNetwork();
        
        for(Enterprise enterprise:rootNetwork.getEnterpriseDirectory().getEnterpriseList())
        {
            for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
            {
            ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
             if(ua!=null)
                {
                    inOrganization = organization;
                    break;
                }
             
            }
        }
        
        if(ua==null)
        {
            for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
            {
                for(Enterprise enterprise:countryNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                    
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                        {
                
                        ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                        if(ua!=null)
                        {
                            inOrganization = organization;
                            break;
                        }
               
                
                        }
                    
                }
            
        
            }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList()) 
                        {
                            for(Enterprise enterprise:stateNetwork.getEnterpriseDirectory().getEnterpriseList())
                                {
                                    
                                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                                    {
                
                                    ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                        if(ua!=null)
                                            {
                                                inOrganization = organization;
                                                break;
                                            }
                                    }        
                
                                }
                        }
        
                }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList())
                    {
                        
                    for(Network cityNetwork:stateNetwork.getSubNetworkDirectory().getNetworkList()){
                for(Enterprise enterprise:cityNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                    
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                        {
                
                         ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                         if(ua!=null)
                            {
                             inOrganization = organization;
                              break;
                            }
                        }          
                
                }
                    }
                    }
        
            }
        }
        
        
        
        if (ua ==null)
        {
           JOptionPane.showMessageDialog(null,"Incorrect credentials for field staff","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        else 
        {
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                
                userProcessContainer.add("workArea",ua.getRole().createWorkArea(userProcessContainer,ua,inOrganization,null, business.getSystemOrg()));
                layout.next(userProcessContainer);
                
        }         
    }
    
    
    
    public void authenticateDonor (String userName,String password)
    {
        
        UserAccount ua = business.getSystemOrg().getUserAccountDirectory().authenticateUser(userName, password);
        
        if (ua ==null)
        {
            JOptionPane.showMessageDialog(null,"Incorrect credentials for Donor","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
       
        
        else 
        {
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                userProcessContainer.add("workArea",ua.getRole().createWorkArea(userProcessContainer,ua,null,null,null));
                layout.next(userProcessContainer);
        }
    }
    
    
    public void authenticateAccountsManager(String userName,String password)
    {
        
        UserAccount ua = null;
        Organization inOrganization=null;
        Enterprise inEnterprise =null;
        
        Network rootNetwork=business.getSystemOrg().getRootNetwork();
        
        for(Enterprise enterprise:rootNetwork.getEnterpriseDirectory().getEnterpriseList())
        {
            for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
            {
            ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
             if(ua!=null)
                {
                    inOrganization = organization;
                    inEnterprise = enterprise;
                    break;
                }
             
            }
        }
        
        if(ua==null)
        {
            for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
            {
                for(Enterprise enterprise:countryNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                    
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                        {
                
                        ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                        if(ua!=null)
                        {
                            inOrganization = organization;
                            inEnterprise = enterprise;
                            break;
                        }
               
                
                        }
                    
                }
            
        
            }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList()) 
                        {
                            for(Enterprise enterprise:stateNetwork.getEnterpriseDirectory().getEnterpriseList())
                                {
                                    
                                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                                    {
                
                                    ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                        if(ua!=null)
                                            {
                                                inOrganization = organization;
                                                inEnterprise = enterprise;
                                                break;
                                            }
                                    }        
                
                                }
                        }
        
                }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList())
                    {
                        
                    for(Network cityNetwork:stateNetwork.getSubNetworkDirectory().getNetworkList()){
                for(Enterprise enterprise:cityNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                    
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                        {
                
                         ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                         if(ua!=null)
                            {
                             inOrganization = organization;
                             inEnterprise = enterprise;
                              break;
                            }
                        }          
                
                }
                    }
                    }
        
            }
        }
        
        
        
        if (ua ==null)
        {
           JOptionPane.showMessageDialog(null,"Incorrect credentials for Accounts Manager","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        else 
        {
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                
                userProcessContainer.add("workArea",ua.getRole().createWorkArea(userProcessContainer,ua,inOrganization,inEnterprise, business.getSystemOrg()));
                layout.next(userProcessContainer);
                
        }         
    }
    
public void authenticateLocalAgent(String userName,String password)
{
    
    UserAccount ua = null;
        Enterprise inEnterprise=null;
        
        
        Network rootNetwork=business.getSystemOrg().getRootNetwork();
        
        for(Enterprise enterprise:rootNetwork.getEnterpriseDirectory().getEnterpriseList())
        {
            ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
             if(ua!=null)
                {
                    inEnterprise = enterprise;
                    break;
                }
        }
        
        if(ua==null)
        {
            for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
            {
                for(Enterprise enterprise:countryNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                
                ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    if(ua!=null)
                        {
                            inEnterprise = enterprise;
                            break;
                        }
               
                
                }
            
        
            }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList()) 
                        {
                            for(Enterprise enterprise:stateNetwork.getEnterpriseDirectory().getEnterpriseList())
                                {
                
                                    ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                                        if(ua!=null)
                                            {
                                                inEnterprise = enterprise;
                                                break;
                                            }
               
                
                                }
                        }
        
                }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList())
                    {
                        
                    for(Network cityNetwork:stateNetwork.getSubNetworkDirectory().getNetworkList()){
                for(Enterprise enterprise:cityNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                
                ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                if(ua!=null)
                {
                    inEnterprise = enterprise;
                    break;
                }
               
                
                }
                    }
                    }
        
            }
        }
        
        
        if (ua ==null)
        {
           JOptionPane.showMessageDialog(null,"Incorrect credentials for local agent","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        else 
        {
           
            
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
               
                userProcessContainer.add("workArea",ua.getRole().createWorkArea(userProcessContainer,ua,null,null, null));
                layout.next(userProcessContainer);
                
        }         
    
}   


public void authenticateRecipient(String userName,String password)
{
    
    UserAccount ua = null;
        Enterprise inEnterprise=null;
        
        
        Network rootNetwork=business.getSystemOrg().getRootNetwork();
        
        for(Enterprise enterprise:rootNetwork.getEnterpriseDirectory().getEnterpriseList())
        {
            ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
             if(ua!=null)
                {
                    inEnterprise = enterprise;
                    break;
                }
        }
        
        if(ua==null)
        {
            for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
            {
                for(Enterprise enterprise:countryNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                
                ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                    if(ua!=null)
                        {
                            inEnterprise = enterprise;
                            break;
                        }
               
                
                }
            
        
            }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList()) 
                        {
                            for(Enterprise enterprise:stateNetwork.getEnterpriseDirectory().getEnterpriseList())
                                {
                
                                    ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                                        if(ua!=null)
                                            {
                                                inEnterprise = enterprise;
                                                break;
                                            }
               
                
                                }
                        }
        
                }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList())
                    {
                        
                    for(Network cityNetwork:stateNetwork.getSubNetworkDirectory().getNetworkList()){
                for(Enterprise enterprise:cityNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                
                ua = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                if(ua!=null)
                {
                    inEnterprise = enterprise;
                    break;
                }
               
                
                }
                    }
                    }
        
            }
        }
        
        
        if (ua ==null)
        {
           JOptionPane.showMessageDialog(null,"Incorrect credentials for recipient","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        else 
        {
           
            
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
               
                userProcessContainer.add("workArea",ua.getRole().createWorkArea(userProcessContainer,ua,null,null, null));
                layout.next(userProcessContainer);
                
        }         
    
}   



public void authenticateSeniorStaff (String userName,String password)
    {
        UserAccount ua = null;
        Organization inOrganization=null;
        
        Network rootNetwork=business.getSystemOrg().getRootNetwork();
        
        for(Enterprise enterprise:rootNetwork.getEnterpriseDirectory().getEnterpriseList())
        {
            for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
            {
            ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
             if(ua!=null)
                {
                    inOrganization = organization;
                    break;
                }
             
            }
        }
        
        if(ua==null)
        {
            for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
            {
                for(Enterprise enterprise:countryNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                    
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                        {
                
                        ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                        if(ua!=null)
                        {
                            inOrganization = organization;
                            break;
                        }
               
                
                        }
                    
                }
            
        
            }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList()) 
                        {
                            for(Enterprise enterprise:stateNetwork.getEnterpriseDirectory().getEnterpriseList())
                                {
                                    
                                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                                    {
                
                                    ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                        if(ua!=null)
                                            {
                                                inOrganization = organization;
                                                break;
                                            }
                                    }        
                
                                }
                        }
        
                }
        }
        
        
        if(ua==null)
        {
             for(Network countryNetwork:rootNetwork.getSubNetworkDirectory().getNetworkList())
                {
                    for(Network stateNetwork:countryNetwork.getSubNetworkDirectory().getNetworkList())
                    {
                        
                    for(Network cityNetwork:stateNetwork.getSubNetworkDirectory().getNetworkList()){
                for(Enterprise enterprise:cityNetwork.getEnterpriseDirectory().getEnterpriseList())
                {
                    
                    for(Organization organization:enterprise.getOrganizationDirectory().getOrganizationList())
                        {
                
                         ua = organization.getUserAccountDirectory().authenticateUser(userName, password);
                         if(ua!=null)
                            {
                             inOrganization = organization;
                              break;
                            }
                        }          
                
                }
                    }
                    }
        
            }
        }
        
        
        
        if (ua ==null)
        {
           JOptionPane.showMessageDialog(null,"Incorrect credentials for senior staff","Login Denied",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        else 
        {
                CardLayout layout = (CardLayout)userProcessContainer.getLayout();
                
                userProcessContainer.add("workArea",ua.getRole().createWorkArea(userProcessContainer,ua,inOrganization,null, business.getSystemOrg()));
                layout.next(userProcessContainer);
                
        }         
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              MainJFrame j =  new MainJFrame();
              j.setVisible(true);
              j.setPreferredSize(new java.awt.Dimension(1024,900));
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agentRegisterJbutton;
    private javax.swing.JButton donateMoneyJbutton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton login_Jbutton;
    private javax.swing.JButton logout_JButton1;
    private javax.swing.JPasswordField password_Jtext;
    private javax.swing.JButton registerRecipientJbutton1;
    private javax.swing.JComboBox roleSelector_JComboBox;
    private javax.swing.JTextField userName_Jtext;
    private javax.swing.JPanel userProcessContainer;
    // End of variables declaration//GEN-END:variables
}
